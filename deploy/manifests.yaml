apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: k8s-dns-manager
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: k8s-dns-manager
    control-plane: controller-manager
  name: k8s-dns-manager-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: dnsproviders.dns.xzzpig.com
spec:
  group: dns.xzzpig.com
  names:
    kind: DNSProvider
    listKind: DNSProviderList
    plural: dnsproviders
    singular: dnsprovider
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.domainName
      name: Domain
      type: string
    - jsonPath: .spec.providerType
      name: Type
      type: string
    - jsonPath: .status.valid
      name: Valid
      type: boolean
    - jsonPath: .status.message
      name: Message
      priority: 1
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: DNSProvider is the Schema for the dnsproviders API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DNSProviderSpec defines the desired state of DNSProvider
            properties:
              aliyun:
                properties:
                  accessKeyId:
                    type: string
                  accessKeySecret:
                    type: string
                required:
                - accessKeyId
                - accessKeySecret
                type: object
              cloudflare:
                properties:
                  apiToken:
                    type: string
                  email:
                    type: string
                  key:
                    type: string
                  proxied:
                    default: false
                    description: If true, the DNS record will be proxied by Cloudflare,
                      can be overrided by Annotation `dns.xzzpig.com/record-proxied`
                    type: boolean
                  zoneName:
                    description: If empty, spec.domainName will be used as zone name
                    type: string
                type: object
              domainName:
                type: string
              providerType:
                enum:
                - ALIYUN
                - CLOUDFLARE
                type: string
              selector:
                description: A label selector is a label query over a set of resources.
                  The result of matchLabels and matchExpressions are ANDed. An empty
                  label selector matches all objects. A null label selector matches
                  no objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
            required:
            - domainName
            - providerType
            type: object
          status:
            description: DNSProviderStatus defines the observed state of DNSProvider
            properties:
              message:
                type: string
              valid:
                type: boolean
            required:
            - valid
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: dnsrecords.dns.xzzpig.com
spec:
  group: dns.xzzpig.com
  names:
    kind: DNSRecord
    listKind: DNSRecordList
    plural: dnsrecords
    singular: dnsrecord
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.providerRef.name
      name: Provider
      priority: 1
      type: string
    - jsonPath: .status.message
      name: Message
      priority: 1
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: DNSRecord is the Schema for the dnsrecords API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DNSRecordSpec defines the desired state of DNSRecord
            properties:
              name:
                type: string
              recordType:
                enum:
                - A
                - CNAME
                - TXT
                - MX
                - SRV
                - AAAA
                - NS
                - CAA
                type: string
              ttl:
                type: integer
              value:
                type: string
            required:
            - name
            - recordType
            - value
            type: object
          status:
            description: DNSRecordStatus defines the observed state of DNSRecord
            properties:
              message:
                type: string
              providerRef:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              recordID:
                type: string
              status:
                type: string
            required:
            - message
            - providerRef
            - status
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: k8s-dns-manager
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: k8s-dns-manager
  name: k8s-dns-manager-controller-manager
  namespace: k8s-dns-manager-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: k8s-dns-manager
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: k8s-dns-manager
  name: k8s-dns-manager-leader-election-role
  namespace: k8s-dns-manager-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: k8s-dns-manager-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - dns.xzzpig.com
  resources:
  - dnsproviders
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dns.xzzpig.com
  resources:
  - dnsproviders/finalizers
  verbs:
  - update
- apiGroups:
  - dns.xzzpig.com
  resources:
  - dnsproviders/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - dns.xzzpig.com
  resources:
  - dnsrecords
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dns.xzzpig.com
  resources:
  - dnsrecords/finalizers
  verbs:
  - update
- apiGroups:
  - dns.xzzpig.com
  resources:
  - dnsrecords/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/finalizers
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: k8s-dns-manager
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: k8s-dns-manager
  name: k8s-dns-manager-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: k8s-dns-manager
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: k8s-dns-manager
  name: k8s-dns-manager-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: k8s-dns-manager
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: k8s-dns-manager
  name: k8s-dns-manager-leader-election-rolebinding
  namespace: k8s-dns-manager-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: k8s-dns-manager-leader-election-role
subjects:
- kind: ServiceAccount
  name: k8s-dns-manager-controller-manager
  namespace: k8s-dns-manager-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: k8s-dns-manager
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: k8s-dns-manager
  name: k8s-dns-manager-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-dns-manager-manager-role
subjects:
- kind: ServiceAccount
  name: k8s-dns-manager-controller-manager
  namespace: k8s-dns-manager-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: k8s-dns-manager
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: k8s-dns-manager
  name: k8s-dns-manager-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-dns-manager-proxy-role
subjects:
- kind: ServiceAccount
  name: k8s-dns-manager-controller-manager
  namespace: k8s-dns-manager-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: k8s-dns-manager
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: k8s-dns-manager
    control-plane: controller-manager
  name: k8s-dns-manager-controller-manager-metrics-service
  namespace: k8s-dns-manager-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: k8s-dns-manager
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: k8s-dns-manager
    control-plane: controller-manager
  name: k8s-dns-manager-controller-manager
  namespace: k8s-dns-manager-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/xzzpig/k8s-dns-manager:v1.1.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: k8s-dns-manager-controller-manager
      terminationGracePeriodSeconds: 10
